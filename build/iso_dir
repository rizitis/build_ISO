#!/bin/sh
# Author: Didier Spaier, Paris, France
#
# this version inspired by this script from George Vlahavas:
# https://github.com/gapan/iso-creation/blob/master/01-downloadpackages.sh
# previous version is build_list_of_packages.sh.prev in the same directory.
# But while Salix arrange the packages in the ISO in sub directories of salix,
# we will instead put all of them directly in slint
# shellcheck disable=SC1090
[ "$#" -ne 1 ] && distribution=slint
[ ! "$distribution" ] && distribution="$1"
if [ ! "$distribution" = salix ] && [ ! "$distribution" = slackware ] && [ ! "$distribution" = slint ]; then
	echo "$distribution is not a supported distribution"
	exit
fi
# Try to avoid timeout when downloading files using slapt-get
. ./build/set_variables_"$distribution"
[ "$(id -u)" -ne 0 ] && echo "Run this script as root." && exit
rm -rf "$ISODIR"
mkdir -p "$ISODIR/slint/"
echo "Fetch the packages to put in the ISO"
slapt-get --clean -c "$SLAPTGETISO"
{
slapt-get --add-keys -c "$SLAPTGETISO"
slapt-get -u -c "$SLAPTGETISO"
} 1>/dev/null
rm -f /tmp/errors_from_populate_iso.sh
WESHOULDEXIT=no
for SET in $MINSETS; do
	echo "fetching the $SET set of packages..."
	while read -r i; do
		[ "$i" = "" ] && continue
		slapt-get -d -reinstall --no-dep -c "$SLAPTGETISO" -i "$i" 1>/dev/null
		RET="$?"
		if [ $RET = 1 ]; then
			echo "Download of $i failed, retry after 10 seconds"
			sleep 10
			slapt-get -d -reinstall --no-dep -c "$SLAPTGETISO" -i "$i" 1>/dev/null
			RET="$?"
			if [ $RET = 1 ]; then
				echo "Download of $i failed again, giving up."
				WESHOULDEXIT=yes
				exit
			fi
		fi
			PKGDOWNLOADED=$(find /var/slapt-get|grep txz)
			echo moving "$PKGDOWNLOADED" in "$ISODIR"/slint
			mv "$PKGDOWNLOADED" "$ISODIR"/slint
		[ "$WESHOULDEXIT" ] = yes && exit
	done < "$ROOTDIR"/sets/"$SET" 2>>/tmp/errors_from_populate_iso.sh
done
# else
# 	# for other distributions than Slint put in $ISODIR/installer the
# 	# packages that will be installed in the initramfs by rc.S
# 	slapt-get -u -c "$ROOTDIR"/build/slapt-getrc.isoslint
# 	slapt-get --clean
# 	while read -r i; do
# 		echo "$i" >>/tmp/populate_iso
# 		[ "$i" ] && slapt-get -d --no-dep --reinstall -c "$ROOTDIR"/build/slapt-getrc.isoslint -i "$i" 1>>LOGisodir
# 	done < "$ROOTDIR"/sets/addonsinstaller 2>>/tmp/errors_from_populate_iso.sh
# 	[ -s /tmp/errors_from_populate_iso.sh ] && exit
# 	mkdir -p "$ISODIR/installer"
# 	find /var/slapt-get -name "*t?z"|while read -r i; do
# 		cp "$i" "$ISODIR/installer"
# 	done
# 	slapt-get -u -c "$ROOTDIR"/build/slapt-getrc.isoslint
# 	slapt-get --clean
# 	# and we ensure that packages that should come from a Slint repository will do so.
# 	while read -r i; do
# 		echo "$i" >>/tmp/populate_iso
# 		[ "$i" ] && slapt-get -d --no-dep --reinstall -c "$ROOTDIR"/build/slapt-getrc.isoslint -i "$i" 1>>LOGisodir
# 	done < "$ROOTDIR"/sets/slint$distribution 2>>/tmp/errors_from_populate_iso.sh
# 	[ -s /tmp/errors_from_populate_iso.sh ] && exit
# 	find /var/slapt-get -name "*t?z"|while read -r i; do
# 		cp "$i" "$ISODIR/slint"
# 	done
chown -R "$REGULARUSER":users "$ISODIR"
# Put some docs at the root of the tree
echo "$ISOLABEL" > "$ISODIR"/slint/ISOLABEL
sed "s/<date>/$DATESTAMP/;s/+version+/slint64-${ISOVERSION}.iso/" "$ROOTDIR"/misc/CONTENT.TXT > "$ISODIR"/CONTENT.TXT
sed "s/+version+/$SLINTVERSION/g" "$ROOTDIR"/misc/README.TXT > "$ISODIR"/README.TXT
echo "$DATESTAMP" > "$ISODIR"/DateBuilt
rm -rf "$ISODIR"/boot/grub
mkdir -p "$ISODIR"/boot/grub
cp "$ROOTDIR"/grub/grub"${distribution}".cfg "$ISODIR"/boot/grub/grub.cfg
KVER="$(find "$ISODIR"/slint -name kernel-[[:digit:]]*txz|sed 's/.*-\([^-]*\)-[^-]*-[^-]*$/\1/')"
tar -xf "$ISODIR"/slint/kernel-"$KVER"*txz boot/vmlinuz-"$KVER"
mv boot/vmlinuz-"$KVER" "$ISODIR"/linux
(cd "$ISODIR" || exit 1
tree >> CONTENT.TXT)
